Version 1.0
------------

    A. Background:
        Assert two Json Objects with some leniency when you have two similar big objects, but one of the object needs
        some transformation due to variety of reasons like one object is generated by querying database and holds
        non-transformed values, while the other one is service response and has transformed values:

        Issues caused while asserting two JsonObject, and assertion fails when you expect it to pass.
        Examples of such issues are:
            a. Array inside the Json object is not ordered.
            b. Dates are same but format is different. E.g. "createdDate":"2020-10-10",
                                     while other object has "createDate":"2020 Oct 10"
            c. Time is same but format is different.
            d. DateTime is different due to "TIMEZONE" conversion.
               Example: One object coming from database holds PST while other one returned by web service holds UTC time.
            e. Case of letters in a String are different
            f. Numbers are in double quotes, E.g. "salePrice":"100.12", compared to "salePrice":100.12
            g. Boolean values need some interpretation like Y/1/Yes/"True" should be true.
            h. Name of the keys are different and needs some mapping.

    B. Requirements:
        1. Ability to assert two Json Objects and return information about non equal/missing fields/values;
        2. Ability to assert two Json Arrays by locating JsonObjects in it using a passed in ID key name and
           return information about non equal/missing
        3. Address all the issues stated in Point A above, with an ability to configure assertion.
            Example of configuration:
                caseSensitive=true;
                orderStringArray:false;
                orderNumberArray:true;
                ignoreDateFormat:true;
        4. Ability to ignore requested (certain) fields while asserting. Example: "_version" may be present in
            only one object

    C. Available Resources/Libraries
        1. There are certain solutions available but those needs comparator to be written every time.
        2. Additionally, post assertion, if differences found, it should be returned.

     D. About JsonDeepEquals
